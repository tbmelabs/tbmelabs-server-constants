<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ch.tbmelabs.tv</groupId>
  <artifactId>constants</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>TBME TV | Constants</name>
  <description>TBME-TV's constant expressions.</description>

  <properties>
    <!-- General configuration -->
    <buildNumber>${maven.build.timestamp}</buildNumber>
    <java.version>1.8</java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Dependency configuration -->
    <org.mockito.mockito-core.version>2.9.0</org.mockito.mockito-core.version>

    <!-- Plugin configuration -->
    <org.jacoco.jacoco-maven-plugin.version>0.8.1</org.jacoco.jacoco-maven-plugin.version>

    <!-- Test coverage configuration -->
    <project.build.test-result-directory>${project.build.directory}/test-results</project.build.test-result-directory>

    <org.jacoco.jacoco-maven-plugin.dest-file-path>${project.build.test-result-directory}/coverage/jacoco/jacoco.exec</org.jacoco.jacoco-maven-plugin.dest-file-path>
    <org.jacoco.jacoco-maven-plugin.output-path>${project.build.test-result-directory}/coverage/jacoco</org.jacoco.jacoco-maven-plugin.output-path>

    <!-- Sonar configuration -->
    <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
    <sonar.issue.ignore.multicriteria>S2068a,S2068b</sonar.issue.ignore.multicriteria>
    <sonar.issue.ignore.multicriteria.S2068a.ruleKey>squid:S2068</sonar.issue.ignore.multicriteria.S2068a.ruleKey>
    <sonar.issue.ignore.multicriteria.S2068a.resourceKey>**/UserSignupService.java</sonar.issue.ignore.multicriteria.S2068a.resourceKey>
    <sonar.issue.ignore.multicriteria.S2068b.ruleKey>squid:S2068</sonar.issue.ignore.multicriteria.S2068b.ruleKey>
    <sonar.issue.ignore.multicriteria.S2068b.resourceKey>**/ClientGrantType.java</sonar.issue.ignore.multicriteria.S2068b.resourceKey>

    <!-- Sonar report paths for sonar-server >= 6.2 -->
    <sonar.jacoco.reportPaths>${project.build.test-result-directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPaths>

    <!-- Sonar report paths for sonar-server < 6.2 -->
    <sonar.jacoco.reportPath>${sonar.jacoco.reportPaths}</sonar.jacoco.reportPath>
  </properties>

  <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.3.RELEASE</version>
  </parent>

  <dependencyManagement>
    <dependencies>
      <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Finchley.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <!-- Do not remove this! Mockito < 2.0 is required. -->
      <version>${org.mockito.mockito-core.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-test -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean install</defaultGoal>
    <finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>

    <plugins>
      <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>

        <executions>
          <execution>
            <id>unit-tests</id>

            <phase>test</phase>

            <goals>
              <goal>test</goal>
            </goals>

            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>

              <excludes>
                <exclude>**/*IntTest.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>

        <executions>
          <execution>
            <id>integration-tests</id>

            <phase>integration-test</phase>

            <goals>
              <goal>integration-test</goal>
            </goals>

            <configuration>
              <includes>
                <include>**/*IntTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${org.jacoco.jacoco-maven-plugin.version}</version>

        <executions>
          <!-- download and install JaCoCo agent -->
          <execution>
            <id>prepare-agent</id>

            <goals>
              <goal>prepare-agent</goal>
            </goals>

            <configuration>
              <destFile>${org.jacoco.jacoco-maven-plugin.dest-file-path}</destFile>
            </configuration>
          </execution>

          <!-- report test coverage -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>

            <goals>
              <goal>report</goal>
            </goals>

            <configuration>
              <dataFile>${org.jacoco.jacoco-maven-plugin.dest-file-path}</dataFile>
              <outputDirectory>${org.jacoco.jacoco-maven-plugin.output-path}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <show>public</show>
          <nohelp>true</nohelp>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>

    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
</project>